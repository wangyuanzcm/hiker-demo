{"mappings":"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","sources":["src/webRTC/js/main.js"],"sourcesContent":["/*\n *  分享屏幕\n */\n\n'use strict';\n\nconst startBtn = document.getElementById('startBtn');\nconst recordBtn = document.getElementById('recordBtn');\nconst downloadBtn = document.getElementById('downloadBtn');\nconst video = document.querySelector('video'); // 预览用的\n\nlet mediaRecorder;\nlet isRecording = false;\nlet recordedBlobs = [];\n\nstartBtn.addEventListener('click', () => {\n  navigator.mediaDevices.getDisplayMedia({video: true})\n      .then(gotDisplayStream, onErr);\n});\n\nfunction showMsg(msg, error) {\n    const msgEle = document.querySelector('#msg');\n    msgEle.innerHTML += `<p>${msg}</p>`;\n    if (typeof error !== 'undefined') {\n      console.error(error);\n    }\n  }\n\n// 拿到屏幕数据流\nfunction gotDisplayStream(stream) {\n  startBtn.disabled = true;\n  video.srcObject = stream; // 显示出来\n  window.stream = stream;   // 缓存一下\n\n  stream.getVideoTracks()[0].addEventListener('ended', () => {\n    showMsg('用户停止了分享屏幕');\n    startBtn.disabled = false;\n    recordBtn.disabled = true;\n  });\n  recordBtn.disabled = false;\n}\n\nfunction onErr(error) {\n  showMsg(`getDisplayMedia on err: ${error.name}`, error);\n}\n\n\n\nif ((navigator.mediaDevices && 'getDisplayMedia' in navigator.mediaDevices)) {\n  startBtn.disabled = false;\n} else {\n  showMsg('getDisplayMedia is not supported');\n}\n\nrecordBtn.addEventListener('click', ()=> {\n  if(isRecording == false) {\n    startRecording();\n  } else {\n    stopRecord();\n  }\n});\n\nfunction stopRecord() {\n  isRecording = false;\n  mediaRecorder.stop();\n  downloadBtn.disabled = false;\n  recordBtn.textContent = \"开始录制\";\n}\n\nfunction startRecording() {\n  recordedBlobs = [];\n  const mimeType = getSupportedMimeTypes()[0];\n  const options = { mimeType };\n\n  try {\n    mediaRecorder = new MediaRecorder(window.stream, options);\n  } catch (e) {\n    showMsg(`创建MediaRecorder出错: ${JSON.stringify(e)}`);\n    return;\n  }\n  recordBtn.textContent = '停止录制';\n  isRecording = true;\n  downloadBtn.disabled = true;\n  mediaRecorder.onstop = (event) => {\n    showMsg('录制停止了: ' + event);\n  };\n  mediaRecorder.ondataavailable = handleDataAvailable;\n  mediaRecorder.start();\n  showMsg('录制开始 mediaRecorder: ' + mediaRecorder);\n}\n\nfunction handleDataAvailable(event) {\n  console.log('handleDataAvailable', event);\n  if (event.data && event.data.size > 0) {\n    recordedBlobs.push(event.data);\n  }\n}\n\n\n\n// 找到支持的格式\nfunction getSupportedMimeTypes() {\n  const possibleTypes = [\n    'video/webm;codecs=vp9,opus',\n    'video/webm;codecs=vp8,opus',\n    'video/webm;codecs=h264,opus',\n    'video/mp4;codecs=h264,aac',\n  ];\n  return possibleTypes.filter(mimeType => {\n    return MediaRecorder.isTypeSupported(mimeType);\n  });\n}\n\ndownloadBtn.addEventListener('click', () => {\n  const blob = new Blob(recordedBlobs, { type: 'video/webm' });\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.style.display = 'none';\n  a.href = url;\n  a.download = '录屏_' + new Date().getTime() + '.webm';\n  document.body.appendChild(a);\n  a.click();\n  setTimeout(() => {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }, 100);\n});"],"names":[],"version":3,"file":"index.eaebf219.js.map","sourceRoot":"/__parcel_source_root/"}