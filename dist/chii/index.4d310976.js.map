{"mappings":"AAGA,IAEIA,iBACAC,kBACAC,cAEAC,GACAC,QAgCAC,SA6DAC,cApGAC,SAAU,EAKVC,aAAe,EAKnB,SAASC,SACFT,mBAAkBA,iBAAmBU,SAASC,eAAe,cAC7DV,oBAAmBA,kBAAoBS,SAASC,eAAe,cAC/DT,gBAAeA,cAAgBQ,SAASC,eAAe,WAE5DX,iBAAiBY,iBAAiB,SAAS,WACzCN,eAAgB,IAAIO,MAAOC,WACvBX,IAAIA,GAAGY,YAAYC,UAEvBC,uBAEKV,SAIHP,iBAAiBkB,UAAY,cAC7BC,cAJAnB,iBAAiBkB,UAAY,aAC7BE,cAKFb,SAAWA,OACb,IAEAN,kBAAkBW,iBAAiB,SAAS,WAC1CV,cAAcgB,UAAY,EAC5B,IAEAG,iBACF,CAKA,SAASD,aACHE,OAAOC,cAAcD,OAAOC,aAAaC,QAE7ChB,aAAe,EAEfH,SAAWoB,YAAYC,cAAe,IACxC,CAEA,SAASP,YACPQ,cAActB,SAChB,CAGA,SAASqB,gBACP,IAAIE,EAAU,2BAA6B,IAAIf,KAQ/C,GALAgB,YAAW,WACTC,QAAQC,IAAIH,EACd,GAAG,KAGCN,OAAOC,aAAc,CACvB,IAAIS,EAAWJ,EAAU,WACzBN,OAAOC,aAAaU,QAAQ,QAAUzB,aAAcwB,EACtD,CAEA,GAAIV,OAAOY,eAAgB,CACrBF,EAAWJ,EAAU,aACzBN,OAAOY,eAAeD,QAAQ,QAAUzB,aAAcwB,EACxD,CACAxB,eAGA2B,OAAOP,GAGP,IAAIQ,EAAM,IAAIC,eAEdD,EAAIE,KAAK,MAAO,qBAAqB,GACrCF,EAAIG,OAGiB,mBAAVC,OACTA,MAAM,oBAEV,CAGA,SAASC,WAAWC,EAAIC,GACtBb,QAAQC,IAAI,eACd,CAGA,SAASa,SAASF,EAAIG,GACpBf,QAAQC,IAAI,aAAec,EAAMC,KAAO,KAAOD,EAAMjB,QACvD,CAKA,SAASZ,SAAS0B,GAEhBA,EAAGK,WADO,uCACS,CAACzC,eAAgB,KAAMsC,SAC5C,CAGA,SAASI,cAAcN,EAAIC,GAEzBD,EAAGK,WADO,qBACS,KAAM,KAAMH,SACjC,CAGA,SAASK,eAAeP,GAItBA,EAAGK,WAFO,wEAES,KAAMC,cAAeJ,SAC1C,CAGA,SAASM,qBAAqBR,GAI5BA,EAAGK,WAFO,+EAES,KAAM,KAAMH,SACjC,CAGA,SAASvB,kBACHC,OAAO6B,eACThD,GAAKmB,OAAO6B,aAAa,YAAa,MAAO,YAAa,OACvDpC,YAAYkC,eAEnB,CAGA,SAAShC,uBACHb,SAEAkB,OAAO6B,eACT/C,QAAUkB,OAAO6B,aAAa,kBAAmB,MAAO,kBAAmB,OACnEpC,YAAYmC,qBAExB,CAGA,SAASf,OAAOiB,GACd,IAAIC,EAAU3C,SAAS4C,cAAc,OACrCD,EAAQnC,UAAYkC,EACpBlD,cAAcqD,YAAYF,EAC5B,CAGA,SAASG,OAAOpB,GACdN,QAAQC,IAAI,oBAAsBK,EAAIqB,WACxC,CAEA,SAASC,eACP,IAAIC,EAASjD,SAAS4C,cAAc,UACpCK,EAAOC,IAAM,KAAOC,SAASC,KAAOD,SAASE,SAASC,QAAQ,iBAAkB,IAAM,YAClFH,SAASI,KAAKC,QAAQ,kBAAmB,GAC3CP,EAAOQ,aAAa,WAAY,QAE9BN,SAASI,KAAKC,QAAQ,aAAc,GACtCP,EAAOQ,aAAa,MAAO,4CAE7BzD,SAAS0D,KAAKb,YAAYI,EAC5B","sources":["src/chii/js/demo.js"],"sourcesContent":["// \"use liberal\"\n\n//------------------------------------------------------------------------------\nvar started = false;\n\nvar buttonStartStuff;\nvar buttonClearOutput;\nvar outputElement;\nvar storageIndex = 0;\nvar db;\nvar otherDB;\n\n//------------------------------------------------------------------------------\nfunction onLoad() {\n  if (!buttonStartStuff) buttonStartStuff = document.getElementById('start-btn');\n  if (!buttonClearOutput) buttonClearOutput = document.getElementById('clear-btn');\n  if (!outputElement) outputElement = document.getElementById('output');\n\n  buttonStartStuff.addEventListener('click', function () {\n    lastClickTime = new Date().toString();\n    if (db) db.transaction(addClick);\n\n    openTheOtherDatabase();\n\n    if (!started) {\n      buttonStartStuff.innerHTML = 'Stop Stuff';\n      startStuff();\n    } else {\n      buttonStartStuff.innerHTML = 'Start Stuff';\n      stopStuff();\n    }\n    started = !started;\n  });\n\n  buttonClearOutput.addEventListener('click', function () {\n    outputElement.innerHTML = '';\n  });\n\n  openTheDatabase();\n}\n\n//------------------------------------------------------------------------------\nvar interval;\n\nfunction startStuff() {\n  if (window.localStorage) window.localStorage.clear();\n\n  storageIndex = 0;\n\n  interval = setInterval(intervalStuff, 1000);\n}\n\nfunction stopStuff() {\n  clearInterval(interval);\n}\n\n//------------------------------------------------------------------------------\nfunction intervalStuff() {\n  var message = 'Doing interval stuff at ' + new Date();\n\n  // add a timeout\n  setTimeout(function () {\n    console.log(message);\n  }, 333);\n\n  // write to local- and sessionStorage\n  if (window.localStorage) {\n    var smessage = message + ' (local)';\n    window.localStorage.setItem('item-' + storageIndex, smessage);\n  }\n\n  if (window.sessionStorage) {\n    var smessage = message + ' (session)';\n    window.sessionStorage.setItem('item-' + storageIndex, smessage);\n  }\n  storageIndex++;\n\n  // write the message to the page\n  output(message);\n\n  // do an XHR\n  var xhr = new XMLHttpRequest();\n  // xhr.addEventListener(\"readystatechange\", function() {logXhr(this)})\n  xhr.open('GET', '../test/demo.json', true);\n  xhr.send();\n\n  // do an FETCH\n  if (typeof fetch === 'function') {\n    fetch('../test/demo.json');\n  }\n}\n\n//------------------------------------------------------------------------------\nfunction sqlSuccess(tx, resultSet) {\n  console.log('SQL Success!');\n}\n\n//------------------------------------------------------------------------------\nfunction sqlError(tx, error) {\n  console.log('SQL Error ' + error.code + ': ' + error.message);\n}\n\n//------------------------------------------------------------------------------\nvar lastClickTime;\n\nfunction addClick(tx) {\n  var sql = 'insert into clicks (date) values (?)';\n  tx.executeSql(sql, [lastClickTime], null, sqlError);\n}\n\n//------------------------------------------------------------------------------\nfunction clearDatabase(tx, resultSet) {\n  var sql = 'delete from clicks';\n  tx.executeSql(sql, null, null, sqlError);\n}\n\n//------------------------------------------------------------------------------\nfunction createDatabase(tx) {\n  var schema = 'clicks (id integer primary key, date text)';\n  var sql = 'create table if not exists ' + schema;\n\n  tx.executeSql(sql, null, clearDatabase, sqlError);\n}\n\n//------------------------------------------------------------------------------\nfunction createDatabase_other(tx) {\n  var schema = 'clicks_other (id integer primary key, other text)';\n  var sql = 'create table if not exists ' + schema;\n\n  tx.executeSql(sql, null, null, sqlError);\n}\n\n//------------------------------------------------------------------------------\nfunction openTheDatabase() {\n  if (window.openDatabase) {\n    db = window.openDatabase('clicks_db', '1.0', 'clicks_db', 8192);\n    db.transaction(createDatabase);\n  }\n}\n\n//------------------------------------------------------------------------------\nfunction openTheOtherDatabase() {\n  if (otherDB) return;\n\n  if (window.openDatabase) {\n    otherDB = window.openDatabase('clicks_other_db', '1.0', 'clicks_other_db', 8192);\n    otherDB.transaction(createDatabase_other);\n  }\n}\n\n//------------------------------------------------------------------------------\nfunction output(string) {\n  var element = document.createElement('div');\n  element.innerHTML = string;\n  outputElement.appendChild(element);\n}\n\n//------------------------------------------------------------------------------\nfunction logXhr(xhr) {\n  console.log('xhr: readyState: ' + xhr.readyState);\n}\n\nfunction injectTarget() {\n  var script = document.createElement('script');\n  script.src = '//' + location.host + location.pathname.replace('test/demo.html', '') + 'target.js';\n  if (location.href.indexOf('embedded=true') > -1) {\n    script.setAttribute('embedded', 'true');\n  }\n  if (location.href.indexOf('cdn=true') > -1) {\n    script.setAttribute('cdn', 'https://cdn.jsdelivr.net/npm/chii/public');\n  }\n  document.head.appendChild(script);\n}\n// 这里手动注入js\n// injectTarget();\n"],"names":["buttonStartStuff","buttonClearOutput","outputElement","db","otherDB","interval","lastClickTime","started","storageIndex","onLoad","document","getElementById","addEventListener","Date","toString","transaction","addClick","openTheOtherDatabase","innerHTML","stopStuff","startStuff","openTheDatabase","window","localStorage","clear","setInterval","intervalStuff","clearInterval","message","setTimeout","console","log","smessage","setItem","sessionStorage","output","xhr","XMLHttpRequest","open","send","fetch","sqlSuccess","tx","resultSet","sqlError","error","code","executeSql","clearDatabase","createDatabase","createDatabase_other","openDatabase","string","element","createElement","appendChild","logXhr","readyState","injectTarget","script","src","location","host","pathname","replace","href","indexOf","setAttribute","head"],"version":3,"file":"index.4d310976.js.map"}